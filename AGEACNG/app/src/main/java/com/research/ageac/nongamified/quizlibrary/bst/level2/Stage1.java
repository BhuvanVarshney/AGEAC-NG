package com.research.ageac.nongamified.quizlibrary.bst.level2;


import com.research.ageac.nongamified.quizlibrary.MCQBaseClass;

public class Stage1 extends MCQBaseClass {

    private String prerequisites = "1. Implementation of BST";

    private String mQuestions[] = {
            "A binary search tree is generated by inserting in order the following integers:\n" +
                    "\n50, 15, 62, 5, 20, 58, 91, 3, 8, 37, 60, 24\n" +
                    "\nThe number of nodes in the left subtree and right subtree of the root respectively is\n",

            "The following numbers are inserted into an empty binary search tree in the given order:\n\n 10, 1, 3, 5, 15, 12, 16\n\nWhat is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)?\n",
            "How many distinct binary search trees can be formed which contains the integers 1, 2, 3?\n",
            "Let T be a binary search tree with 15 nodes. The minimum and maximum possible heights of T are\n",
            "Binary search tree can be considered an example of complete binary tree with special attributes because\n"
    };

    private String mChoices[][] = {
            {"(4, 7)", "(7, 4)", "(8, 3)", "(3, 8)"},
            {"6", "4", "3", "2"},
            {"6", "5", "4", "3"},
            {"3 and 14 respectively", "3 and 15 respectively", "4 and 14 respectively", "4 and 15 respectively"},
            {"BST takes care of complete binary tree properties", "Structures of both are identical and depend upon the input", "Both can be implemented efficiently using Array", "Statement is incorrect as BST does not care about complete binary tree properties"}
    };

    private int mCorrectAnswers[] = {1, 2, 1, 0, 3};

    public String getPrerequisites() {
        return prerequisites;
    }

    public int getQuestionsCount() {
        return mQuestions.length;
    }

    public String getQuestion(int a) {
        String question = mQuestions[a];
        return question;
    }

    public String getChoice1(int a) {
        String choice1 = mChoices[a][0];
        return choice1;
    }

    public String getChoice2(int a) {
        String choice2 = mChoices[a][1];
        return choice2;
    }

    public String getChoice3(int a) {
        String choice3 = mChoices[a][2];
        return choice3;
    }

    public String getChoice4(int a) {
        String choice4 = mChoices[a][3];
        return choice4;
    }

    public int getCorrectAnswer(int a) {
        return mCorrectAnswers[a];
    }

}